@inject QuizAuthStateProvider QuizAuthStateProvider
@inject NavigationManager NavigationManager


    <div class="offcanvas offcanvas-start show" data-bs-scroll="true" data-bs-backdrop="false" tabindex="-1"
     id="offcanvasWithBackdrop" aria-labelledby="offcanvasWithBackdropLabel" style="visibility: visible;"
         aria-modal="true" role="dialog">
        <div class="offcanvas-header">
            @*<h5 class="offcanvas-title" id="offcanvasWithBackdropLabel">Colored with scrolling</h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas"
                aria-label="Close" @onclick="OnMenuClosed"></button>*@
            <div class="flyout-header">
                <h2 class="fw-bold h1">Blazing Quiz</h2>
            </div>
        </div>
            <div class="offcanvas-body">
                <nav class="flex-column">
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="/student/home" Match="NavLinkMatch.All">
                            Home
                        </NavLink>
                    </div>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="student/my-quizzes">
                            My Quizes
                        </NavLink>
                    </div>
                    <div class="nav-item px-3">
                        <a role="button" class="nav-link" @onclick="LogoutAsync">
                            Logout
                        </a>
                    </div>

                </nav>
            </div>
        <div class="flyout-footer">
            <label class="m-0 p-0"> Developed By <a href="linkedin.com/in/mehmet-aybey"class="text-white fw-bold text-decoration-underline">Mehmet Aybey</a></label>
        </div>
    </div>
    <div class="offcanvas-backdrop fade show" @onclick="OnMenuClosed"></div>

@code

{
    [Parameter]
    public EventCallback OnMenuClosed { get; set; }

    private async Task LogoutAsync()
    {
        await QuizAuthStateProvider.SetLogoutAsync();
        NavigationManager.NavigateTo("auth/login",replace:true);
    }
    
}
