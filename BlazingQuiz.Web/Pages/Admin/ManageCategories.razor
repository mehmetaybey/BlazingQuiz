@page "/admin/manage-categories"

@inject ICategoryApi CategoryApi


<SectionContent SectionName="pageTitle">Manage Categories</SectionContent>

<div class="container">
    <div class="row">
        <div class="col-sm-4">
            <EditForm Model="_category" OnValidSubmit="SaveCategoryAsync">
                <DataAnnotationsValidator/>
                <div class="bg-white p-3">
                    <div class="">
                        <h5 class="m-0 fw-bold" >Add/Edit Category</h5>
                        <hr/>
                        <div class="">
                            <div class="mb-3">
                                <label class="form-label">
                                    Category Name
                                </label>
                                <InputText class="form-control form-control-sm" @bind-Value="_category.Name"/>
                                <ValidationMessage For="() => _category.Name"/>
                            </div>
                            @if (_errorMessage !=null)
                            {
                                <div class="mb-3 border border-danger border-1 d-flex justify-content-between gap-2 align-items-start">
                                    <p class="mb-0 p-1"> @_errorMessage</p>
                                    <button type="button" class="btn btn-sm btn-danger" @onclick="()=>_errorMessage=null"></button>
                                </div>
                            }
                            <div class=" d-flex justify-content-between align-items-start">
                                @if (!_isBusy)
                                {
                                    <button type="button" class="btn btn-sm btn-danger" @onclick="() => _category=new()">Cancel</button>
                                    <button type="submit" class="btn btn-sm btn-success">Save</button>
                                }
                                else
                                {
                                    <button type="button" disabled="disabled" class="btn btn-sm btn-secondary">Cancel</button>
                                    <button type="button" disabled="disabled" class="btn btn-sm btn-secondary">Saving Category...</button>
                                }
                               
                            </div>
                        </div>
                    </div>
                </div>
            </EditForm>
        </div>
        <div class="col-sm-8 ms-auto">
            <table class="table table-striped table-hover">
                <thead>
                <tr>
                    <th>#</th>
                    <th>Id</th>
                    <th>Name</th>
                    <th>Actions</th>
                </tr>
                </thead>
                <tbody>
                @if(_categories.Length == 0)
                {
                    <tbody>
                        <tr>
                            <td colspan="4">No categories found</td>
                        </tr>
                    </tbody>
                }
                else
                {
                    int number = 1;
                    @foreach (var category in _categories)
                    {
                        <tr>
                            <td>@(number++)</td>
                            <td>@category.Id</td>
                            <td>@category.Name</td>
                            <td>
                                <button type="button" class="btn btn-primary btn-sm" @onclick="()=> OnEditCategory(category)">Edit</button>
                                <button type="button" class="btn btn-danger btn-sm">Delete</button>
                            </td>
                        </tr>
                    }
                }
                </tbody>
                </table>
        </div>
    </div>
</div>
@code {

    private CategoryDto[] _categories = [];
    private CategoryDto _category = new ();
    private bool _isBusy;
    private string? _errorMessage;

    private async Task LoadCategoriesAsync()
    {
        _categories = await CategoryApi.GetCategoriesAsync();
    }


    protected override async Task OnInitializedAsync()=> await LoadCategoriesAsync();

    private void OnEditCategory(CategoryDto category)
    {
        _category= category;
    }
    private async Task SaveCategoryAsync()
    {
        try
        {
            _isBusy = true;
            var response = await CategoryApi.SaveCategoryAsync(_category);
            if (!response.IsSuccess)
            {
                _errorMessage = response.ErrorMessage ?? "Unknown error in saving category";
                return;
            }

            _category = new();
            await LoadCategoriesAsync();
        }
        catch (Exception e)
        {
            _errorMessage = e.Message;
        }
        finally
        {
            _isBusy = false;
        }
    }
}
